# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

{% import 'macros.jinja' as macros with context %}

{{ macros.github_header() }}

jobs:
  local:
    name: "install from local source"
    runs-on: {{ "${{ matrix.os }}" }}
  {% if env is defined %}
    env:
    {% for key, value in env.items() %}
      {{ key }}: "{{ value }}"
    {% endfor %}
  {% endif %}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, ubuntu-20.04]

    steps:
      {{ macros.github_checkout_arrow()|indent }}

      - name: Configure dependencies (macos)
        if: contains(matrix.os, 'macOS')
        run: |
          brew install openssl
          # disable sccache on macos as it times out for unknown reasons
          # see GH-33721
          # brew install sccache
          # remove cmake so that we can test our cmake downloading abilities
          brew uninstall cmake
      - name: Configure dependencies (linux)
        if: contains(matrix.os, 'ubuntu')
        run: |
          sudo env \
            ARROW_GCS=ON \
            ARROW_S3=ON \
            ARROW_SOURCE_HOME=arrow \
            arrow/ci/scripts/r_install_system_dependencies.sh
          arrow/ci/scripts/install_sccache.sh unknown-linux-musl /usr/local/bin
      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
      # CRAN builders have the entire bin here added to the path. This sometimes
      # includes things like GNU libtool which name-collide with what we expect
      - name: Add R.framework/Resources/bin to the path
        if: contains(matrix.os, 'macOS')
        run: echo "/Library/Frameworks/R.framework/Resources/bin" >> $GITHUB_PATH
      - name : Check whether libtool in R is used
        if: contains(matrix.os, 'macOS')
        run: |
          if [ "$(which libtool)" != "/Library/Frameworks/R.framework/Resources/bin/libtool" ]; then
            echo "libtool provided by R isn't found: $(which libtool)"
            exit 1
          fi
      - name: Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache: false # cache does not work on across branches
          working-directory: arrow/r
          extra-packages: |
            any::rcmdcheck
            any::sys
      - name: Install
        env:
          _R_CHECK_CRAN_INCOMING_: false
          ARROW_USE_PKG_CONFIG: false
          FORCE_BUNDLED_BUILD: true
          LIBARROW_MINIMAL: false
          ARROW_R_DEV: TRUE
          LIBARROW_BINARY: false
        {{ macros.github_set_sccache_envvars()|indent(8)}}
        run: |
          sccache --start-server || echo 'sccache not found'
          cd arrow/r
          R CMD INSTALL . --install-tests
      - name: Run the tests
        run: R -e 'if(tools::testInstalledPackage("arrow") != 0L) stop("There was a test failure.")'
      - name: Dump test logs
        run: cat arrow-tests/testthat.Rout*
        if: failure()
      - name: Save the test output
        uses: actions/upload-artifact@v2
        with:
          name: test-output
          path: arrow-tests/testthat.Rout*
        if: always()
