%% Licensed to the Apache Software Foundation (ASF) under one
%% or more contributor license agreements.  See the NOTICE file
%% distributed with this work for additional information
%% regarding copyright ownership.  The ASF licenses this file
%% to you under the Apache License, Version 2.0 (the
%% "License"); you may not use this file except in compliance
%% with the License.  You may obtain a copy of the License at
%%
%%   http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing,
%% software distributed under the License is distributed on an
%% "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
%% KIND, either express or implied.  See the License for the
%% specific language governing permissions and limitations
%% under the License.

sequenceDiagram
autonumber

participant Client
participant Metadata Server
participant Data Server
Client->>Metadata Server: PollFlightInfo(FlightDescriptor)
Metadata Server->>Client: PollInfo{descriptor: FlightDescriptor', ...}
Client->>Metadata Server: PollFlightInfo(FlightDescriptor')
Metadata Server->>Client: PollInfo{descriptor: FlightDescriptor'', ...}
Client->>Metadata Server: PollFlightInfo(FlightDescriptor'')
Metadata Server->>Client: PollInfo{descriptor: null, info: FlightInfo{endpoints: [FlightEndpoint{ticket: Ticket}, â€¦]}
Note over Client, Data Server: This may be parallelized
Note over Client, Data Server: Some endpoints may be processed while polling
loop for each endpoint in FlightInfo.endpoints
    Client->>Data Server: DoGet(Ticket)
    Data Server->>Client: stream of FlightData
end
