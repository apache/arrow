// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: substrait/extended_expression.proto
// Protobuf C++ Version: 5.30.0-dev

#include "substrait/extended_expression.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace substrait {

inline constexpr ExpressionReference::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : output_names_{},
        expr_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ExpressionReference::ExpressionReference(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ExpressionReference_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExpressionReferenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExpressionReferenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExpressionReferenceDefaultTypeInternal() {}
  union {
    ExpressionReference _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExpressionReferenceDefaultTypeInternal _ExpressionReference_default_instance_;

inline constexpr ExtendedExpression::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        extension_uris_{},
        extensions_{},
        referred_expr_{},
        expected_type_urls_{},
        base_schema_{nullptr},
        advanced_extensions_{nullptr},
        version_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ExtendedExpression::ExtendedExpression(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ExtendedExpression_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExtendedExpressionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExtendedExpressionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExtendedExpressionDefaultTypeInternal() {}
  union {
    ExtendedExpression _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExtendedExpressionDefaultTypeInternal _ExtendedExpression_default_instance_;
}  // namespace substrait
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_substrait_2fextended_5fexpression_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_substrait_2fextended_5fexpression_2eproto = nullptr;
const ::uint32_t
    TableStruct_substrait_2fextended_5fexpression_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::substrait::ExpressionReference, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::substrait::ExpressionReference, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::substrait::ExpressionReference, _impl_.output_names_),
        PROTOBUF_FIELD_OFFSET(::substrait::ExpressionReference, _impl_.expr_type_),
        PROTOBUF_FIELD_OFFSET(::substrait::ExtendedExpression, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::substrait::ExtendedExpression, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::substrait::ExtendedExpression, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::substrait::ExtendedExpression, _impl_.extension_uris_),
        PROTOBUF_FIELD_OFFSET(::substrait::ExtendedExpression, _impl_.extensions_),
        PROTOBUF_FIELD_OFFSET(::substrait::ExtendedExpression, _impl_.referred_expr_),
        PROTOBUF_FIELD_OFFSET(::substrait::ExtendedExpression, _impl_.base_schema_),
        PROTOBUF_FIELD_OFFSET(::substrait::ExtendedExpression, _impl_.advanced_extensions_),
        PROTOBUF_FIELD_OFFSET(::substrait::ExtendedExpression, _impl_.expected_type_urls_),
        2,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::substrait::ExpressionReference)},
        {12, 27, -1, sizeof(::substrait::ExtendedExpression)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::substrait::_ExpressionReference_default_instance_._instance,
    &::substrait::_ExtendedExpression_default_instance_._instance,
};
const char descriptor_table_protodef_substrait_2fextended_5fexpression_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n#substrait/extended_expression.proto\022\ts"
    "ubstrait\032\027substrait/algebra.proto\032%subst"
    "rait/extensions/extensions.proto\032\024substr"
    "ait/plan.proto\032\024substrait/type.proto\"\226\001\n"
    "\023ExpressionReference\022+\n\nexpression\030\001 \001(\013"
    "2\025.substrait.ExpressionH\000\022/\n\007measure\030\002 \001"
    "(\0132\034.substrait.AggregateFunctionH\000\022\024\n\014ou"
    "tput_names\030\003 \003(\tB\013\n\texpr_type\"\207\003\n\022Extend"
    "edExpression\022#\n\007version\030\007 \001(\0132\022.substrai"
    "t.Version\022@\n\016extension_uris\030\001 \003(\0132(.subs"
    "trait.extensions.SimpleExtensionURI\022D\n\ne"
    "xtensions\030\002 \003(\01320.substrait.extensions.S"
    "impleExtensionDeclaration\0225\n\rreferred_ex"
    "pr\030\003 \003(\0132\036.substrait.ExpressionReference"
    "\022+\n\013base_schema\030\004 \001(\0132\026.substrait.NamedS"
    "truct\022D\n\023advanced_extensions\030\005 \001(\0132\'.sub"
    "strait.extensions.AdvancedExtension\022\032\n\022e"
    "xpected_type_urls\030\006 \003(\tBW\n\022io.substrait."
    "protoP\001Z*github.com/substrait-io/substra"
    "it-go/proto\252\002\022Substrait.Protobufb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_substrait_2fextended_5fexpression_2eproto_deps[4] =
    {
        &::descriptor_table_substrait_2falgebra_2eproto,
        &::descriptor_table_substrait_2fextensions_2fextensions_2eproto,
        &::descriptor_table_substrait_2fplan_2eproto,
        &::descriptor_table_substrait_2ftype_2eproto,
};
static ::absl::once_flag descriptor_table_substrait_2fextended_5fexpression_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_substrait_2fextended_5fexpression_2eproto = {
    false,
    false,
    800,
    descriptor_table_protodef_substrait_2fextended_5fexpression_2eproto,
    "substrait/extended_expression.proto",
    &descriptor_table_substrait_2fextended_5fexpression_2eproto_once,
    descriptor_table_substrait_2fextended_5fexpression_2eproto_deps,
    4,
    2,
    schemas,
    file_default_instances,
    TableStruct_substrait_2fextended_5fexpression_2eproto::offsets,
    file_level_enum_descriptors_substrait_2fextended_5fexpression_2eproto,
    file_level_service_descriptors_substrait_2fextended_5fexpression_2eproto,
};
namespace substrait {
// ===================================================================

class ExpressionReference::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::substrait::ExpressionReference, _impl_._oneof_case_);
};

void ExpressionReference::set_allocated_expression(::substrait::Expression* expression) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_expr_type();
  if (expression) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(expression)->GetArena();
    if (message_arena != submessage_arena) {
      expression = ::google::protobuf::internal::GetOwnedMessage(message_arena, expression, submessage_arena);
    }
    set_has_expression();
    _impl_.expr_type_.expression_ = expression;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.ExpressionReference.expression)
}
void ExpressionReference::clear_expression() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (expr_type_case() == kExpression) {
    if (GetArena() == nullptr) {
      delete _impl_.expr_type_.expression_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.expr_type_.expression_);
    }
    clear_has_expr_type();
  }
}
void ExpressionReference::set_allocated_measure(::substrait::AggregateFunction* measure) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_expr_type();
  if (measure) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(measure)->GetArena();
    if (message_arena != submessage_arena) {
      measure = ::google::protobuf::internal::GetOwnedMessage(message_arena, measure, submessage_arena);
    }
    set_has_measure();
    _impl_.expr_type_.measure_ = measure;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.ExpressionReference.measure)
}
void ExpressionReference::clear_measure() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (expr_type_case() == kMeasure) {
    if (GetArena() == nullptr) {
      delete _impl_.expr_type_.measure_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.expr_type_.measure_);
    }
    clear_has_expr_type();
  }
}
ExpressionReference::ExpressionReference(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExpressionReference_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:substrait.ExpressionReference)
}
PROTOBUF_NDEBUG_INLINE ExpressionReference::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::substrait::ExpressionReference& from_msg)
      : output_names_{visibility, arena, from.output_names_},
        expr_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ExpressionReference::ExpressionReference(
    ::google::protobuf::Arena* arena,
    const ExpressionReference& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExpressionReference_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExpressionReference* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (expr_type_case()) {
    case EXPR_TYPE_NOT_SET:
      break;
      case kExpression:
        _impl_.expr_type_.expression_ = ::google::protobuf::Message::CopyConstruct<::substrait::Expression>(arena, *from._impl_.expr_type_.expression_);
        break;
      case kMeasure:
        _impl_.expr_type_.measure_ = ::google::protobuf::Message::CopyConstruct<::substrait::AggregateFunction>(arena, *from._impl_.expr_type_.measure_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:substrait.ExpressionReference)
}
PROTOBUF_NDEBUG_INLINE ExpressionReference::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : output_names_{visibility, arena},
        expr_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ExpressionReference::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ExpressionReference::~ExpressionReference() {
  // @@protoc_insertion_point(destructor:substrait.ExpressionReference)
  SharedDtor(*this);
}
inline void ExpressionReference::SharedDtor(MessageLite& self) {
  ExpressionReference& this_ = static_cast<ExpressionReference&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_expr_type()) {
    this_.clear_expr_type();
  }
  this_._impl_.~Impl_();
}

void ExpressionReference::clear_expr_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.ExpressionReference)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (expr_type_case()) {
    case kExpression: {
      if (GetArena() == nullptr) {
        delete _impl_.expr_type_.expression_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.expr_type_.expression_);
      }
      break;
    }
    case kMeasure: {
      if (GetArena() == nullptr) {
        delete _impl_.expr_type_.measure_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.expr_type_.measure_);
      }
      break;
    }
    case EXPR_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = EXPR_TYPE_NOT_SET;
}


inline void* ExpressionReference::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExpressionReference(arena);
}
constexpr auto ExpressionReference::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ExpressionReference, _impl_.output_names_) +
          decltype(ExpressionReference::_impl_.output_names_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ExpressionReference), alignof(ExpressionReference), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ExpressionReference::PlacementNew_,
                                 sizeof(ExpressionReference),
                                 alignof(ExpressionReference));
  }
}
constexpr auto ExpressionReference::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ExpressionReference_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ExpressionReference::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ExpressionReference>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ExpressionReference::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ExpressionReference>(), &ExpressionReference::ByteSizeLong,
              &ExpressionReference::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ExpressionReference, _impl_._cached_size_),
          false,
      },
      &ExpressionReference::kDescriptorMethods,
      &descriptor_table_substrait_2fextended_5fexpression_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ExpressionReference_class_data_ =
            ExpressionReference::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* ExpressionReference::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ExpressionReference_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ExpressionReference_class_data_.tc_table);
  return ExpressionReference_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 2, 50, 2> ExpressionReference::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ExpressionReference_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::substrait::ExpressionReference>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string output_names = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ExpressionReference, _impl_.output_names_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .substrait.Expression expression = 1;
    {PROTOBUF_FIELD_OFFSET(ExpressionReference, _impl_.expr_type_.expression_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .substrait.AggregateFunction measure = 2;
    {PROTOBUF_FIELD_OFFSET(ExpressionReference, _impl_.expr_type_.measure_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string output_names = 3;
    {PROTOBUF_FIELD_OFFSET(ExpressionReference, _impl_.output_names_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::substrait::Expression>()},
    {::_pbi::TcParser::GetTable<::substrait::AggregateFunction>()},
  }}, {{
    "\35\0\0\14\0\0\0\0"
    "substrait.ExpressionReference"
    "output_names"
  }},
};

PROTOBUF_NOINLINE void ExpressionReference::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ExpressionReference)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.output_names_.Clear();
  clear_expr_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExpressionReference::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExpressionReference& this_ = static_cast<const ExpressionReference&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExpressionReference::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExpressionReference& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:substrait.ExpressionReference)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.expr_type_case()) {
            case kExpression: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.expr_type_.expression_, this_._impl_.expr_type_.expression_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kMeasure: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.expr_type_.measure_, this_._impl_.expr_type_.measure_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          // repeated string output_names = 3;
          for (int i = 0, n = this_._internal_output_names_size(); i < n; ++i) {
            const auto& s = this_._internal_output_names().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "substrait.ExpressionReference.output_names");
            target = stream->WriteString(3, s, target);
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:substrait.ExpressionReference)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExpressionReference::ByteSizeLong(const MessageLite& base) {
          const ExpressionReference& this_ = static_cast<const ExpressionReference&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExpressionReference::ByteSizeLong() const {
          const ExpressionReference& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:substrait.ExpressionReference)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string output_names = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_output_names().size());
              for (int i = 0, n = this_._internal_output_names().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_output_names().Get(i));
              }
            }
          }
          switch (this_.expr_type_case()) {
            // .substrait.Expression expression = 1;
            case kExpression: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.expr_type_.expression_);
              break;
            }
            // .substrait.AggregateFunction measure = 2;
            case kMeasure: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.expr_type_.measure_);
              break;
            }
            case EXPR_TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExpressionReference::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExpressionReference*>(&to_msg);
  auto& from = static_cast<const ExpressionReference&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.ExpressionReference)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_output_names()->MergeFrom(from._internal_output_names());
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_expr_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kExpression: {
        if (oneof_needs_init) {
          _this->_impl_.expr_type_.expression_ =
              ::google::protobuf::Message::CopyConstruct<::substrait::Expression>(arena, *from._impl_.expr_type_.expression_);
        } else {
          _this->_impl_.expr_type_.expression_->MergeFrom(from._internal_expression());
        }
        break;
      }
      case kMeasure: {
        if (oneof_needs_init) {
          _this->_impl_.expr_type_.measure_ =
              ::google::protobuf::Message::CopyConstruct<::substrait::AggregateFunction>(arena, *from._impl_.expr_type_.measure_);
        } else {
          _this->_impl_.expr_type_.measure_->MergeFrom(from._internal_measure());
        }
        break;
      }
      case EXPR_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExpressionReference::CopyFrom(const ExpressionReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ExpressionReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExpressionReference::InternalSwap(ExpressionReference* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.output_names_.InternalSwap(&other->_impl_.output_names_);
  swap(_impl_.expr_type_, other->_impl_.expr_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ExpressionReference::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExtendedExpression::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ExtendedExpression>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_._has_bits_);
};

void ExtendedExpression::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.version_ != nullptr) _impl_.version_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void ExtendedExpression::clear_extension_uris() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extension_uris_.Clear();
}
void ExtendedExpression::clear_extensions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extensions_.Clear();
}
void ExtendedExpression::clear_base_schema() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_schema_ != nullptr) _impl_.base_schema_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ExtendedExpression::clear_advanced_extensions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.advanced_extensions_ != nullptr) _impl_.advanced_extensions_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ExtendedExpression::ExtendedExpression(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExtendedExpression_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:substrait.ExtendedExpression)
}
PROTOBUF_NDEBUG_INLINE ExtendedExpression::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::substrait::ExtendedExpression& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        extension_uris_{visibility, arena, from.extension_uris_},
        extensions_{visibility, arena, from.extensions_},
        referred_expr_{visibility, arena, from.referred_expr_},
        expected_type_urls_{visibility, arena, from.expected_type_urls_} {}

ExtendedExpression::ExtendedExpression(
    ::google::protobuf::Arena* arena,
    const ExtendedExpression& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExtendedExpression_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExtendedExpression* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_schema_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::substrait::NamedStruct>(
                              arena, *from._impl_.base_schema_)
                        : nullptr;
  _impl_.advanced_extensions_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::substrait::extensions::AdvancedExtension>(
                              arena, *from._impl_.advanced_extensions_)
                        : nullptr;
  _impl_.version_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::substrait::Version>(
                              arena, *from._impl_.version_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:substrait.ExtendedExpression)
}
PROTOBUF_NDEBUG_INLINE ExtendedExpression::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        extension_uris_{visibility, arena},
        extensions_{visibility, arena},
        referred_expr_{visibility, arena},
        expected_type_urls_{visibility, arena} {}

inline void ExtendedExpression::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_schema_),
           0,
           offsetof(Impl_, version_) -
               offsetof(Impl_, base_schema_) +
               sizeof(Impl_::version_));
}
ExtendedExpression::~ExtendedExpression() {
  // @@protoc_insertion_point(destructor:substrait.ExtendedExpression)
  SharedDtor(*this);
}
inline void ExtendedExpression::SharedDtor(MessageLite& self) {
  ExtendedExpression& this_ = static_cast<ExtendedExpression&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.base_schema_;
  delete this_._impl_.advanced_extensions_;
  delete this_._impl_.version_;
  this_._impl_.~Impl_();
}

inline void* ExtendedExpression::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExtendedExpression(arena);
}
constexpr auto ExtendedExpression::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.extension_uris_) +
          decltype(ExtendedExpression::_impl_.extension_uris_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.extensions_) +
          decltype(ExtendedExpression::_impl_.extensions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.referred_expr_) +
          decltype(ExtendedExpression::_impl_.referred_expr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.expected_type_urls_) +
          decltype(ExtendedExpression::_impl_.expected_type_urls_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ExtendedExpression), alignof(ExtendedExpression), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ExtendedExpression::PlacementNew_,
                                 sizeof(ExtendedExpression),
                                 alignof(ExtendedExpression));
  }
}
constexpr auto ExtendedExpression::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ExtendedExpression_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ExtendedExpression::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ExtendedExpression>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ExtendedExpression::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ExtendedExpression>(), &ExtendedExpression::ByteSizeLong,
              &ExtendedExpression::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_._cached_size_),
          false,
      },
      &ExtendedExpression::kDescriptorMethods,
      &descriptor_table_substrait_2fextended_5fexpression_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ExtendedExpression_class_data_ =
            ExtendedExpression::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* ExtendedExpression::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ExtendedExpression_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ExtendedExpression_class_data_.tc_table);
  return ExtendedExpression_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 6, 55, 2> ExtendedExpression::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ExtendedExpression_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::substrait::ExtendedExpression>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .substrait.extensions.SimpleExtensionURI extension_uris = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.extension_uris_)}},
    // repeated .substrait.extensions.SimpleExtensionDeclaration extensions = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.extensions_)}},
    // repeated .substrait.ExpressionReference referred_expr = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.referred_expr_)}},
    // .substrait.NamedStruct base_schema = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 3, PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.base_schema_)}},
    // .substrait.extensions.AdvancedExtension advanced_extensions = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 4, PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.advanced_extensions_)}},
    // repeated string expected_type_urls = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.expected_type_urls_)}},
    // .substrait.Version version = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 5, PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.version_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .substrait.extensions.SimpleExtensionURI extension_uris = 1;
    {PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.extension_uris_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .substrait.extensions.SimpleExtensionDeclaration extensions = 2;
    {PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.extensions_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .substrait.ExpressionReference referred_expr = 3;
    {PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.referred_expr_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .substrait.NamedStruct base_schema = 4;
    {PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.base_schema_), _Internal::kHasBitsOffset + 0, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .substrait.extensions.AdvancedExtension advanced_extensions = 5;
    {PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.advanced_extensions_), _Internal::kHasBitsOffset + 1, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string expected_type_urls = 6;
    {PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.expected_type_urls_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .substrait.Version version = 7;
    {PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.version_), _Internal::kHasBitsOffset + 2, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::substrait::extensions::SimpleExtensionURI>()},
    {::_pbi::TcParser::GetTable<::substrait::extensions::SimpleExtensionDeclaration>()},
    {::_pbi::TcParser::GetTable<::substrait::ExpressionReference>()},
    {::_pbi::TcParser::GetTable<::substrait::NamedStruct>()},
    {::_pbi::TcParser::GetTable<::substrait::extensions::AdvancedExtension>()},
    {::_pbi::TcParser::GetTable<::substrait::Version>()},
  }}, {{
    "\34\0\0\0\0\0\22\0"
    "substrait.ExtendedExpression"
    "expected_type_urls"
  }},
};

PROTOBUF_NOINLINE void ExtendedExpression::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ExtendedExpression)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extension_uris_.Clear();
  _impl_.extensions_.Clear();
  _impl_.referred_expr_.Clear();
  _impl_.expected_type_urls_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.base_schema_ != nullptr);
      _impl_.base_schema_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.advanced_extensions_ != nullptr);
      _impl_.advanced_extensions_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.version_ != nullptr);
      _impl_.version_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExtendedExpression::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExtendedExpression& this_ = static_cast<const ExtendedExpression&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExtendedExpression::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExtendedExpression& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:substrait.ExtendedExpression)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .substrait.extensions.SimpleExtensionURI extension_uris = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_extension_uris_size());
               i < n; i++) {
            const auto& repfield = this_._internal_extension_uris().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .substrait.extensions.SimpleExtensionDeclaration extensions = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_extensions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_extensions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .substrait.ExpressionReference referred_expr = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_referred_expr_size());
               i < n; i++) {
            const auto& repfield = this_._internal_referred_expr().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .substrait.NamedStruct base_schema = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.base_schema_, this_._impl_.base_schema_->GetCachedSize(), target,
                stream);
          }

          // .substrait.extensions.AdvancedExtension advanced_extensions = 5;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.advanced_extensions_, this_._impl_.advanced_extensions_->GetCachedSize(), target,
                stream);
          }

          // repeated string expected_type_urls = 6;
          for (int i = 0, n = this_._internal_expected_type_urls_size(); i < n; ++i) {
            const auto& s = this_._internal_expected_type_urls().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "substrait.ExtendedExpression.expected_type_urls");
            target = stream->WriteString(6, s, target);
          }

          // .substrait.Version version = 7;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.version_, this_._impl_.version_->GetCachedSize(), target,
                stream);
          }

          if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:substrait.ExtendedExpression)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExtendedExpression::ByteSizeLong(const MessageLite& base) {
          const ExtendedExpression& this_ = static_cast<const ExtendedExpression&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExtendedExpression::ByteSizeLong() const {
          const ExtendedExpression& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:substrait.ExtendedExpression)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .substrait.extensions.SimpleExtensionURI extension_uris = 1;
            {
              total_size += 1UL * this_._internal_extension_uris_size();
              for (const auto& msg : this_._internal_extension_uris()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .substrait.extensions.SimpleExtensionDeclaration extensions = 2;
            {
              total_size += 1UL * this_._internal_extensions_size();
              for (const auto& msg : this_._internal_extensions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .substrait.ExpressionReference referred_expr = 3;
            {
              total_size += 1UL * this_._internal_referred_expr_size();
              for (const auto& msg : this_._internal_referred_expr()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string expected_type_urls = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_expected_type_urls().size());
              for (int i = 0, n = this_._internal_expected_type_urls().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_expected_type_urls().Get(i));
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .substrait.NamedStruct base_schema = 4;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.base_schema_);
            }
            // .substrait.extensions.AdvancedExtension advanced_extensions = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.advanced_extensions_);
            }
            // .substrait.Version version = 7;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.version_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExtendedExpression::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExtendedExpression*>(&to_msg);
  auto& from = static_cast<const ExtendedExpression&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.ExtendedExpression)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_extension_uris()->MergeFrom(
      from._internal_extension_uris());
  _this->_internal_mutable_extensions()->MergeFrom(
      from._internal_extensions());
  _this->_internal_mutable_referred_expr()->MergeFrom(
      from._internal_referred_expr());
  _this->_internal_mutable_expected_type_urls()->MergeFrom(from._internal_expected_type_urls());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.base_schema_ != nullptr);
      if (_this->_impl_.base_schema_ == nullptr) {
        _this->_impl_.base_schema_ =
            ::google::protobuf::Message::CopyConstruct<::substrait::NamedStruct>(arena, *from._impl_.base_schema_);
      } else {
        _this->_impl_.base_schema_->MergeFrom(*from._impl_.base_schema_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.advanced_extensions_ != nullptr);
      if (_this->_impl_.advanced_extensions_ == nullptr) {
        _this->_impl_.advanced_extensions_ =
            ::google::protobuf::Message::CopyConstruct<::substrait::extensions::AdvancedExtension>(arena, *from._impl_.advanced_extensions_);
      } else {
        _this->_impl_.advanced_extensions_->MergeFrom(*from._impl_.advanced_extensions_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.version_ != nullptr);
      if (_this->_impl_.version_ == nullptr) {
        _this->_impl_.version_ =
            ::google::protobuf::Message::CopyConstruct<::substrait::Version>(arena, *from._impl_.version_);
      } else {
        _this->_impl_.version_->MergeFrom(*from._impl_.version_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExtendedExpression::CopyFrom(const ExtendedExpression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ExtendedExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExtendedExpression::InternalSwap(ExtendedExpression* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.extension_uris_.InternalSwap(&other->_impl_.extension_uris_);
  _impl_.extensions_.InternalSwap(&other->_impl_.extensions_);
  _impl_.referred_expr_.InternalSwap(&other->_impl_.referred_expr_);
  _impl_.expected_type_urls_.InternalSwap(&other->_impl_.expected_type_urls_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.version_)
      + sizeof(ExtendedExpression::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(ExtendedExpression, _impl_.base_schema_)>(
          reinterpret_cast<char*>(&_impl_.base_schema_),
          reinterpret_cast<char*>(&other->_impl_.base_schema_));
}

::google::protobuf::Metadata ExtendedExpression::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace substrait
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_substrait_2fextended_5fexpression_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
