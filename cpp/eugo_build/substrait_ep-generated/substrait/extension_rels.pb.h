// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: substrait/extension_rels.proto
// Protobuf C++ Version: 5.30.0-dev

#ifndef substrait_2fextension_5frels_2eproto_2epb_2eh
#define substrait_2fextension_5frels_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5030000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "substrait/algebra.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_substrait_2fextension_5frels_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_substrait_2fextension_5frels_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_substrait_2fextension_5frels_2eproto;
}  // extern "C"
namespace arrow {
namespace substrait_ext {
class AsOfJoinRel;
struct AsOfJoinRelDefaultTypeInternal;
extern AsOfJoinRelDefaultTypeInternal _AsOfJoinRel_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull AsOfJoinRel_class_data_;
class AsOfJoinRel_AsOfJoinKey;
struct AsOfJoinRel_AsOfJoinKeyDefaultTypeInternal;
extern AsOfJoinRel_AsOfJoinKeyDefaultTypeInternal _AsOfJoinRel_AsOfJoinKey_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull AsOfJoinRel_AsOfJoinKey_class_data_;
class NamedTapRel;
struct NamedTapRelDefaultTypeInternal;
extern NamedTapRelDefaultTypeInternal _NamedTapRel_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull NamedTapRel_class_data_;
class SegmentedAggregateRel;
struct SegmentedAggregateRelDefaultTypeInternal;
extern SegmentedAggregateRelDefaultTypeInternal _SegmentedAggregateRel_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SegmentedAggregateRel_class_data_;
}  // namespace substrait_ext
}  // namespace arrow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace arrow {
namespace substrait_ext {

// ===================================================================


// -------------------------------------------------------------------

class NamedTapRel final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:arrow.substrait_ext.NamedTapRel) */ {
 public:
  inline NamedTapRel() : NamedTapRel(nullptr) {}
  ~NamedTapRel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NamedTapRel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NamedTapRel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NamedTapRel(
      ::google::protobuf::internal::ConstantInitialized);

  inline NamedTapRel(const NamedTapRel& from) : NamedTapRel(nullptr, from) {}
  inline NamedTapRel(NamedTapRel&& from) noexcept
      : NamedTapRel(nullptr, std::move(from)) {}
  inline NamedTapRel& operator=(const NamedTapRel& from) {
    CopyFrom(from);
    return *this;
  }
  inline NamedTapRel& operator=(NamedTapRel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NamedTapRel& default_instance() {
    return *reinterpret_cast<const NamedTapRel*>(
        &_NamedTapRel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(NamedTapRel& a, NamedTapRel& b) { a.Swap(&b); }
  inline void Swap(NamedTapRel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NamedTapRel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NamedTapRel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NamedTapRel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NamedTapRel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NamedTapRel& from) { NamedTapRel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NamedTapRel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "arrow.substrait_ext.NamedTapRel"; }

 protected:
  explicit NamedTapRel(::google::protobuf::Arena* arena);
  NamedTapRel(::google::protobuf::Arena* arena, const NamedTapRel& from);
  NamedTapRel(::google::protobuf::Arena* arena, NamedTapRel&& from) noexcept
      : NamedTapRel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kColumnsFieldNumber = 3,
    kKindFieldNumber = 1,
    kNameFieldNumber = 2,
  };
  // repeated string columns = 3;
  int columns_size() const;
  private:
  int _internal_columns_size() const;

  public:
  void clear_columns() ;
  const std::string& columns(int index) const;
  std::string* mutable_columns(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_columns(int index, Arg_&& value, Args_... args);
  std::string* add_columns();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_columns(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& columns() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_columns();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_columns() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_columns();

  public:
  // string kind = 1;
  void clear_kind() ;
  const std::string& kind() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_kind(Arg_&& arg, Args_... args);
  std::string* mutable_kind();
  [[nodiscard]] std::string* release_kind();
  void set_allocated_kind(std::string* value);

  private:
  const std::string& _internal_kind() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_kind(const std::string& value);
  std::string* _internal_mutable_kind();

  public:
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  [[nodiscard]] std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:arrow.substrait_ext.NamedTapRel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      55, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NamedTapRel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> columns_;
    ::google::protobuf::internal::ArenaStringPtr kind_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_substrait_2fextension_5frels_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull NamedTapRel_class_data_;
// -------------------------------------------------------------------

class SegmentedAggregateRel final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:arrow.substrait_ext.SegmentedAggregateRel) */ {
 public:
  inline SegmentedAggregateRel() : SegmentedAggregateRel(nullptr) {}
  ~SegmentedAggregateRel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SegmentedAggregateRel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SegmentedAggregateRel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SegmentedAggregateRel(
      ::google::protobuf::internal::ConstantInitialized);

  inline SegmentedAggregateRel(const SegmentedAggregateRel& from) : SegmentedAggregateRel(nullptr, from) {}
  inline SegmentedAggregateRel(SegmentedAggregateRel&& from) noexcept
      : SegmentedAggregateRel(nullptr, std::move(from)) {}
  inline SegmentedAggregateRel& operator=(const SegmentedAggregateRel& from) {
    CopyFrom(from);
    return *this;
  }
  inline SegmentedAggregateRel& operator=(SegmentedAggregateRel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SegmentedAggregateRel& default_instance() {
    return *reinterpret_cast<const SegmentedAggregateRel*>(
        &_SegmentedAggregateRel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SegmentedAggregateRel& a, SegmentedAggregateRel& b) { a.Swap(&b); }
  inline void Swap(SegmentedAggregateRel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SegmentedAggregateRel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SegmentedAggregateRel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SegmentedAggregateRel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SegmentedAggregateRel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SegmentedAggregateRel& from) { SegmentedAggregateRel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SegmentedAggregateRel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "arrow.substrait_ext.SegmentedAggregateRel"; }

 protected:
  explicit SegmentedAggregateRel(::google::protobuf::Arena* arena);
  SegmentedAggregateRel(::google::protobuf::Arena* arena, const SegmentedAggregateRel& from);
  SegmentedAggregateRel(::google::protobuf::Arena* arena, SegmentedAggregateRel&& from) noexcept
      : SegmentedAggregateRel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupingKeysFieldNumber = 1,
    kSegmentKeysFieldNumber = 2,
    kMeasuresFieldNumber = 3,
  };
  // repeated .substrait.Expression.FieldReference grouping_keys = 1;
  int grouping_keys_size() const;
  private:
  int _internal_grouping_keys_size() const;

  public:
  void clear_grouping_keys() ;
  ::substrait::Expression_FieldReference* mutable_grouping_keys(int index);
  ::google::protobuf::RepeatedPtrField<::substrait::Expression_FieldReference>* mutable_grouping_keys();

  private:
  const ::google::protobuf::RepeatedPtrField<::substrait::Expression_FieldReference>& _internal_grouping_keys() const;
  ::google::protobuf::RepeatedPtrField<::substrait::Expression_FieldReference>* _internal_mutable_grouping_keys();
  public:
  const ::substrait::Expression_FieldReference& grouping_keys(int index) const;
  ::substrait::Expression_FieldReference* add_grouping_keys();
  const ::google::protobuf::RepeatedPtrField<::substrait::Expression_FieldReference>& grouping_keys() const;
  // repeated .substrait.Expression.FieldReference segment_keys = 2;
  int segment_keys_size() const;
  private:
  int _internal_segment_keys_size() const;

  public:
  void clear_segment_keys() ;
  ::substrait::Expression_FieldReference* mutable_segment_keys(int index);
  ::google::protobuf::RepeatedPtrField<::substrait::Expression_FieldReference>* mutable_segment_keys();

  private:
  const ::google::protobuf::RepeatedPtrField<::substrait::Expression_FieldReference>& _internal_segment_keys() const;
  ::google::protobuf::RepeatedPtrField<::substrait::Expression_FieldReference>* _internal_mutable_segment_keys();
  public:
  const ::substrait::Expression_FieldReference& segment_keys(int index) const;
  ::substrait::Expression_FieldReference* add_segment_keys();
  const ::google::protobuf::RepeatedPtrField<::substrait::Expression_FieldReference>& segment_keys() const;
  // repeated .substrait.AggregateRel.Measure measures = 3;
  int measures_size() const;
  private:
  int _internal_measures_size() const;

  public:
  void clear_measures() ;
  ::substrait::AggregateRel_Measure* mutable_measures(int index);
  ::google::protobuf::RepeatedPtrField<::substrait::AggregateRel_Measure>* mutable_measures();

  private:
  const ::google::protobuf::RepeatedPtrField<::substrait::AggregateRel_Measure>& _internal_measures() const;
  ::google::protobuf::RepeatedPtrField<::substrait::AggregateRel_Measure>* _internal_mutable_measures();
  public:
  const ::substrait::AggregateRel_Measure& measures(int index) const;
  ::substrait::AggregateRel_Measure* add_measures();
  const ::google::protobuf::RepeatedPtrField<::substrait::AggregateRel_Measure>& measures() const;
  // @@protoc_insertion_point(class_scope:arrow.substrait_ext.SegmentedAggregateRel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SegmentedAggregateRel& from_msg);
    ::google::protobuf::RepeatedPtrField< ::substrait::Expression_FieldReference > grouping_keys_;
    ::google::protobuf::RepeatedPtrField< ::substrait::Expression_FieldReference > segment_keys_;
    ::google::protobuf::RepeatedPtrField< ::substrait::AggregateRel_Measure > measures_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_substrait_2fextension_5frels_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SegmentedAggregateRel_class_data_;
// -------------------------------------------------------------------

class AsOfJoinRel_AsOfJoinKey final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:arrow.substrait_ext.AsOfJoinRel.AsOfJoinKey) */ {
 public:
  inline AsOfJoinRel_AsOfJoinKey() : AsOfJoinRel_AsOfJoinKey(nullptr) {}
  ~AsOfJoinRel_AsOfJoinKey() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AsOfJoinRel_AsOfJoinKey* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AsOfJoinRel_AsOfJoinKey));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AsOfJoinRel_AsOfJoinKey(
      ::google::protobuf::internal::ConstantInitialized);

  inline AsOfJoinRel_AsOfJoinKey(const AsOfJoinRel_AsOfJoinKey& from) : AsOfJoinRel_AsOfJoinKey(nullptr, from) {}
  inline AsOfJoinRel_AsOfJoinKey(AsOfJoinRel_AsOfJoinKey&& from) noexcept
      : AsOfJoinRel_AsOfJoinKey(nullptr, std::move(from)) {}
  inline AsOfJoinRel_AsOfJoinKey& operator=(const AsOfJoinRel_AsOfJoinKey& from) {
    CopyFrom(from);
    return *this;
  }
  inline AsOfJoinRel_AsOfJoinKey& operator=(AsOfJoinRel_AsOfJoinKey&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AsOfJoinRel_AsOfJoinKey& default_instance() {
    return *reinterpret_cast<const AsOfJoinRel_AsOfJoinKey*>(
        &_AsOfJoinRel_AsOfJoinKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(AsOfJoinRel_AsOfJoinKey& a, AsOfJoinRel_AsOfJoinKey& b) { a.Swap(&b); }
  inline void Swap(AsOfJoinRel_AsOfJoinKey* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AsOfJoinRel_AsOfJoinKey* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AsOfJoinRel_AsOfJoinKey* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AsOfJoinRel_AsOfJoinKey>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AsOfJoinRel_AsOfJoinKey& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AsOfJoinRel_AsOfJoinKey& from) { AsOfJoinRel_AsOfJoinKey::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AsOfJoinRel_AsOfJoinKey* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "arrow.substrait_ext.AsOfJoinRel.AsOfJoinKey"; }

 protected:
  explicit AsOfJoinRel_AsOfJoinKey(::google::protobuf::Arena* arena);
  AsOfJoinRel_AsOfJoinKey(::google::protobuf::Arena* arena, const AsOfJoinRel_AsOfJoinKey& from);
  AsOfJoinRel_AsOfJoinKey(::google::protobuf::Arena* arena, AsOfJoinRel_AsOfJoinKey&& from) noexcept
      : AsOfJoinRel_AsOfJoinKey(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kByFieldNumber = 2,
    kOnFieldNumber = 1,
  };
  // repeated .substrait.Expression by = 2;
  int by_size() const;
  private:
  int _internal_by_size() const;

  public:
  void clear_by() ;
  ::substrait::Expression* mutable_by(int index);
  ::google::protobuf::RepeatedPtrField<::substrait::Expression>* mutable_by();

  private:
  const ::google::protobuf::RepeatedPtrField<::substrait::Expression>& _internal_by() const;
  ::google::protobuf::RepeatedPtrField<::substrait::Expression>* _internal_mutable_by();
  public:
  const ::substrait::Expression& by(int index) const;
  ::substrait::Expression* add_by();
  const ::google::protobuf::RepeatedPtrField<::substrait::Expression>& by() const;
  // .substrait.Expression on = 1;
  bool has_on() const;
  void clear_on() ;
  const ::substrait::Expression& on() const;
  [[nodiscard]] ::substrait::Expression* release_on();
  ::substrait::Expression* mutable_on();
  void set_allocated_on(::substrait::Expression* value);
  void unsafe_arena_set_allocated_on(::substrait::Expression* value);
  ::substrait::Expression* unsafe_arena_release_on();

  private:
  const ::substrait::Expression& _internal_on() const;
  ::substrait::Expression* _internal_mutable_on();

  public:
  // @@protoc_insertion_point(class_scope:arrow.substrait_ext.AsOfJoinRel.AsOfJoinKey)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AsOfJoinRel_AsOfJoinKey& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::substrait::Expression > by_;
    ::substrait::Expression* on_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_substrait_2fextension_5frels_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull AsOfJoinRel_AsOfJoinKey_class_data_;
// -------------------------------------------------------------------

class AsOfJoinRel final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:arrow.substrait_ext.AsOfJoinRel) */ {
 public:
  inline AsOfJoinRel() : AsOfJoinRel(nullptr) {}
  ~AsOfJoinRel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AsOfJoinRel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AsOfJoinRel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AsOfJoinRel(
      ::google::protobuf::internal::ConstantInitialized);

  inline AsOfJoinRel(const AsOfJoinRel& from) : AsOfJoinRel(nullptr, from) {}
  inline AsOfJoinRel(AsOfJoinRel&& from) noexcept
      : AsOfJoinRel(nullptr, std::move(from)) {}
  inline AsOfJoinRel& operator=(const AsOfJoinRel& from) {
    CopyFrom(from);
    return *this;
  }
  inline AsOfJoinRel& operator=(AsOfJoinRel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AsOfJoinRel& default_instance() {
    return *reinterpret_cast<const AsOfJoinRel*>(
        &_AsOfJoinRel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AsOfJoinRel& a, AsOfJoinRel& b) { a.Swap(&b); }
  inline void Swap(AsOfJoinRel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AsOfJoinRel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AsOfJoinRel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AsOfJoinRel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AsOfJoinRel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AsOfJoinRel& from) { AsOfJoinRel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AsOfJoinRel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "arrow.substrait_ext.AsOfJoinRel"; }

 protected:
  explicit AsOfJoinRel(::google::protobuf::Arena* arena);
  AsOfJoinRel(::google::protobuf::Arena* arena, const AsOfJoinRel& from);
  AsOfJoinRel(::google::protobuf::Arena* arena, AsOfJoinRel&& from) noexcept
      : AsOfJoinRel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using AsOfJoinKey = AsOfJoinRel_AsOfJoinKey;

  // accessors -------------------------------------------------------
  enum : int {
    kKeysFieldNumber = 1,
    kToleranceFieldNumber = 2,
  };
  // repeated .arrow.substrait_ext.AsOfJoinRel.AsOfJoinKey keys = 1;
  int keys_size() const;
  private:
  int _internal_keys_size() const;

  public:
  void clear_keys() ;
  ::arrow::substrait_ext::AsOfJoinRel_AsOfJoinKey* mutable_keys(int index);
  ::google::protobuf::RepeatedPtrField<::arrow::substrait_ext::AsOfJoinRel_AsOfJoinKey>* mutable_keys();

  private:
  const ::google::protobuf::RepeatedPtrField<::arrow::substrait_ext::AsOfJoinRel_AsOfJoinKey>& _internal_keys() const;
  ::google::protobuf::RepeatedPtrField<::arrow::substrait_ext::AsOfJoinRel_AsOfJoinKey>* _internal_mutable_keys();
  public:
  const ::arrow::substrait_ext::AsOfJoinRel_AsOfJoinKey& keys(int index) const;
  ::arrow::substrait_ext::AsOfJoinRel_AsOfJoinKey* add_keys();
  const ::google::protobuf::RepeatedPtrField<::arrow::substrait_ext::AsOfJoinRel_AsOfJoinKey>& keys() const;
  // int64 tolerance = 2;
  void clear_tolerance() ;
  ::int64_t tolerance() const;
  void set_tolerance(::int64_t value);

  private:
  ::int64_t _internal_tolerance() const;
  void _internal_set_tolerance(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:arrow.substrait_ext.AsOfJoinRel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AsOfJoinRel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::arrow::substrait_ext::AsOfJoinRel_AsOfJoinKey > keys_;
    ::int64_t tolerance_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_substrait_2fextension_5frels_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull AsOfJoinRel_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AsOfJoinRel_AsOfJoinKey

// .substrait.Expression on = 1;
inline bool AsOfJoinRel_AsOfJoinKey::has_on() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.on_ != nullptr);
  return value;
}
inline const ::substrait::Expression& AsOfJoinRel_AsOfJoinKey::_internal_on() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::substrait::Expression* p = _impl_.on_;
  return p != nullptr ? *p : reinterpret_cast<const ::substrait::Expression&>(::substrait::_Expression_default_instance_);
}
inline const ::substrait::Expression& AsOfJoinRel_AsOfJoinKey::on() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:arrow.substrait_ext.AsOfJoinRel.AsOfJoinKey.on)
  return _internal_on();
}
inline void AsOfJoinRel_AsOfJoinKey::unsafe_arena_set_allocated_on(::substrait::Expression* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.on_);
  }
  _impl_.on_ = reinterpret_cast<::substrait::Expression*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:arrow.substrait_ext.AsOfJoinRel.AsOfJoinKey.on)
}
inline ::substrait::Expression* AsOfJoinRel_AsOfJoinKey::release_on() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::substrait::Expression* released = _impl_.on_;
  _impl_.on_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::substrait::Expression* AsOfJoinRel_AsOfJoinKey::unsafe_arena_release_on() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:arrow.substrait_ext.AsOfJoinRel.AsOfJoinKey.on)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::substrait::Expression* temp = _impl_.on_;
  _impl_.on_ = nullptr;
  return temp;
}
inline ::substrait::Expression* AsOfJoinRel_AsOfJoinKey::_internal_mutable_on() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.on_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::substrait::Expression>(GetArena());
    _impl_.on_ = reinterpret_cast<::substrait::Expression*>(p);
  }
  return _impl_.on_;
}
inline ::substrait::Expression* AsOfJoinRel_AsOfJoinKey::mutable_on() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::substrait::Expression* _msg = _internal_mutable_on();
  // @@protoc_insertion_point(field_mutable:arrow.substrait_ext.AsOfJoinRel.AsOfJoinKey.on)
  return _msg;
}
inline void AsOfJoinRel_AsOfJoinKey::set_allocated_on(::substrait::Expression* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.on_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.on_ = reinterpret_cast<::substrait::Expression*>(value);
  // @@protoc_insertion_point(field_set_allocated:arrow.substrait_ext.AsOfJoinRel.AsOfJoinKey.on)
}

// repeated .substrait.Expression by = 2;
inline int AsOfJoinRel_AsOfJoinKey::_internal_by_size() const {
  return _internal_by().size();
}
inline int AsOfJoinRel_AsOfJoinKey::by_size() const {
  return _internal_by_size();
}
inline ::substrait::Expression* AsOfJoinRel_AsOfJoinKey::mutable_by(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:arrow.substrait_ext.AsOfJoinRel.AsOfJoinKey.by)
  return _internal_mutable_by()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::substrait::Expression>* AsOfJoinRel_AsOfJoinKey::mutable_by()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:arrow.substrait_ext.AsOfJoinRel.AsOfJoinKey.by)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_by();
}
inline const ::substrait::Expression& AsOfJoinRel_AsOfJoinKey::by(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:arrow.substrait_ext.AsOfJoinRel.AsOfJoinKey.by)
  return _internal_by().Get(index);
}
inline ::substrait::Expression* AsOfJoinRel_AsOfJoinKey::add_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::substrait::Expression* _add = _internal_mutable_by()->Add();
  // @@protoc_insertion_point(field_add:arrow.substrait_ext.AsOfJoinRel.AsOfJoinKey.by)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::Expression>& AsOfJoinRel_AsOfJoinKey::by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:arrow.substrait_ext.AsOfJoinRel.AsOfJoinKey.by)
  return _internal_by();
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::Expression>&
AsOfJoinRel_AsOfJoinKey::_internal_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.by_;
}
inline ::google::protobuf::RepeatedPtrField<::substrait::Expression>*
AsOfJoinRel_AsOfJoinKey::_internal_mutable_by() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.by_;
}

// -------------------------------------------------------------------

// AsOfJoinRel

// repeated .arrow.substrait_ext.AsOfJoinRel.AsOfJoinKey keys = 1;
inline int AsOfJoinRel::_internal_keys_size() const {
  return _internal_keys().size();
}
inline int AsOfJoinRel::keys_size() const {
  return _internal_keys_size();
}
inline void AsOfJoinRel::clear_keys() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.keys_.Clear();
}
inline ::arrow::substrait_ext::AsOfJoinRel_AsOfJoinKey* AsOfJoinRel::mutable_keys(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:arrow.substrait_ext.AsOfJoinRel.keys)
  return _internal_mutable_keys()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::arrow::substrait_ext::AsOfJoinRel_AsOfJoinKey>* AsOfJoinRel::mutable_keys()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:arrow.substrait_ext.AsOfJoinRel.keys)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_keys();
}
inline const ::arrow::substrait_ext::AsOfJoinRel_AsOfJoinKey& AsOfJoinRel::keys(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:arrow.substrait_ext.AsOfJoinRel.keys)
  return _internal_keys().Get(index);
}
inline ::arrow::substrait_ext::AsOfJoinRel_AsOfJoinKey* AsOfJoinRel::add_keys() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::arrow::substrait_ext::AsOfJoinRel_AsOfJoinKey* _add = _internal_mutable_keys()->Add();
  // @@protoc_insertion_point(field_add:arrow.substrait_ext.AsOfJoinRel.keys)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::arrow::substrait_ext::AsOfJoinRel_AsOfJoinKey>& AsOfJoinRel::keys() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:arrow.substrait_ext.AsOfJoinRel.keys)
  return _internal_keys();
}
inline const ::google::protobuf::RepeatedPtrField<::arrow::substrait_ext::AsOfJoinRel_AsOfJoinKey>&
AsOfJoinRel::_internal_keys() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.keys_;
}
inline ::google::protobuf::RepeatedPtrField<::arrow::substrait_ext::AsOfJoinRel_AsOfJoinKey>*
AsOfJoinRel::_internal_mutable_keys() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.keys_;
}

// int64 tolerance = 2;
inline void AsOfJoinRel::clear_tolerance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tolerance_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t AsOfJoinRel::tolerance() const {
  // @@protoc_insertion_point(field_get:arrow.substrait_ext.AsOfJoinRel.tolerance)
  return _internal_tolerance();
}
inline void AsOfJoinRel::set_tolerance(::int64_t value) {
  _internal_set_tolerance(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:arrow.substrait_ext.AsOfJoinRel.tolerance)
}
inline ::int64_t AsOfJoinRel::_internal_tolerance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tolerance_;
}
inline void AsOfJoinRel::_internal_set_tolerance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tolerance_ = value;
}

// -------------------------------------------------------------------

// NamedTapRel

// string kind = 1;
inline void NamedTapRel::clear_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& NamedTapRel::kind() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:arrow.substrait_ext.NamedTapRel.kind)
  return _internal_kind();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void NamedTapRel::set_kind(Arg_&& arg,
                                              Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.kind_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:arrow.substrait_ext.NamedTapRel.kind)
}
inline std::string* NamedTapRel::mutable_kind() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_kind();
  // @@protoc_insertion_point(field_mutable:arrow.substrait_ext.NamedTapRel.kind)
  return _s;
}
inline const std::string& NamedTapRel::_internal_kind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kind_.Get();
}
inline void NamedTapRel::_internal_set_kind(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.kind_.Set(value, GetArena());
}
inline std::string* NamedTapRel::_internal_mutable_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.kind_.Mutable( GetArena());
}
inline std::string* NamedTapRel::release_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:arrow.substrait_ext.NamedTapRel.kind)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.kind_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.kind_.Set("", GetArena());
  }
  return released;
}
inline void NamedTapRel::set_allocated_kind(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.kind_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.kind_.IsDefault()) {
    _impl_.kind_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:arrow.substrait_ext.NamedTapRel.kind)
}

// string name = 2;
inline void NamedTapRel::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& NamedTapRel::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:arrow.substrait_ext.NamedTapRel.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void NamedTapRel::set_name(Arg_&& arg,
                                              Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:arrow.substrait_ext.NamedTapRel.name)
}
inline std::string* NamedTapRel::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:arrow.substrait_ext.NamedTapRel.name)
  return _s;
}
inline const std::string& NamedTapRel::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void NamedTapRel::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* NamedTapRel::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* NamedTapRel::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:arrow.substrait_ext.NamedTapRel.name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void NamedTapRel::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:arrow.substrait_ext.NamedTapRel.name)
}

// repeated string columns = 3;
inline int NamedTapRel::_internal_columns_size() const {
  return _internal_columns().size();
}
inline int NamedTapRel::columns_size() const {
  return _internal_columns_size();
}
inline void NamedTapRel::clear_columns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.columns_.Clear();
}
inline std::string* NamedTapRel::add_columns() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_columns()->Add();
  // @@protoc_insertion_point(field_add_mutable:arrow.substrait_ext.NamedTapRel.columns)
  return _s;
}
inline const std::string& NamedTapRel::columns(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:arrow.substrait_ext.NamedTapRel.columns)
  return _internal_columns().Get(index);
}
inline std::string* NamedTapRel::mutable_columns(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:arrow.substrait_ext.NamedTapRel.columns)
  return _internal_mutable_columns()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void NamedTapRel::set_columns(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_columns()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:arrow.substrait_ext.NamedTapRel.columns)
}
template <typename Arg_, typename... Args_>
inline void NamedTapRel::add_columns(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_columns(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:arrow.substrait_ext.NamedTapRel.columns)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NamedTapRel::columns() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:arrow.substrait_ext.NamedTapRel.columns)
  return _internal_columns();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NamedTapRel::mutable_columns() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:arrow.substrait_ext.NamedTapRel.columns)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_columns();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NamedTapRel::_internal_columns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.columns_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NamedTapRel::_internal_mutable_columns() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.columns_;
}

// -------------------------------------------------------------------

// SegmentedAggregateRel

// repeated .substrait.Expression.FieldReference grouping_keys = 1;
inline int SegmentedAggregateRel::_internal_grouping_keys_size() const {
  return _internal_grouping_keys().size();
}
inline int SegmentedAggregateRel::grouping_keys_size() const {
  return _internal_grouping_keys_size();
}
inline ::substrait::Expression_FieldReference* SegmentedAggregateRel::mutable_grouping_keys(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:arrow.substrait_ext.SegmentedAggregateRel.grouping_keys)
  return _internal_mutable_grouping_keys()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::substrait::Expression_FieldReference>* SegmentedAggregateRel::mutable_grouping_keys()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:arrow.substrait_ext.SegmentedAggregateRel.grouping_keys)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_grouping_keys();
}
inline const ::substrait::Expression_FieldReference& SegmentedAggregateRel::grouping_keys(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:arrow.substrait_ext.SegmentedAggregateRel.grouping_keys)
  return _internal_grouping_keys().Get(index);
}
inline ::substrait::Expression_FieldReference* SegmentedAggregateRel::add_grouping_keys() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::substrait::Expression_FieldReference* _add = _internal_mutable_grouping_keys()->Add();
  // @@protoc_insertion_point(field_add:arrow.substrait_ext.SegmentedAggregateRel.grouping_keys)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::Expression_FieldReference>& SegmentedAggregateRel::grouping_keys() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:arrow.substrait_ext.SegmentedAggregateRel.grouping_keys)
  return _internal_grouping_keys();
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::Expression_FieldReference>&
SegmentedAggregateRel::_internal_grouping_keys() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grouping_keys_;
}
inline ::google::protobuf::RepeatedPtrField<::substrait::Expression_FieldReference>*
SegmentedAggregateRel::_internal_mutable_grouping_keys() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.grouping_keys_;
}

// repeated .substrait.Expression.FieldReference segment_keys = 2;
inline int SegmentedAggregateRel::_internal_segment_keys_size() const {
  return _internal_segment_keys().size();
}
inline int SegmentedAggregateRel::segment_keys_size() const {
  return _internal_segment_keys_size();
}
inline ::substrait::Expression_FieldReference* SegmentedAggregateRel::mutable_segment_keys(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:arrow.substrait_ext.SegmentedAggregateRel.segment_keys)
  return _internal_mutable_segment_keys()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::substrait::Expression_FieldReference>* SegmentedAggregateRel::mutable_segment_keys()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:arrow.substrait_ext.SegmentedAggregateRel.segment_keys)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_segment_keys();
}
inline const ::substrait::Expression_FieldReference& SegmentedAggregateRel::segment_keys(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:arrow.substrait_ext.SegmentedAggregateRel.segment_keys)
  return _internal_segment_keys().Get(index);
}
inline ::substrait::Expression_FieldReference* SegmentedAggregateRel::add_segment_keys() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::substrait::Expression_FieldReference* _add = _internal_mutable_segment_keys()->Add();
  // @@protoc_insertion_point(field_add:arrow.substrait_ext.SegmentedAggregateRel.segment_keys)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::Expression_FieldReference>& SegmentedAggregateRel::segment_keys() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:arrow.substrait_ext.SegmentedAggregateRel.segment_keys)
  return _internal_segment_keys();
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::Expression_FieldReference>&
SegmentedAggregateRel::_internal_segment_keys() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segment_keys_;
}
inline ::google::protobuf::RepeatedPtrField<::substrait::Expression_FieldReference>*
SegmentedAggregateRel::_internal_mutable_segment_keys() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.segment_keys_;
}

// repeated .substrait.AggregateRel.Measure measures = 3;
inline int SegmentedAggregateRel::_internal_measures_size() const {
  return _internal_measures().size();
}
inline int SegmentedAggregateRel::measures_size() const {
  return _internal_measures_size();
}
inline ::substrait::AggregateRel_Measure* SegmentedAggregateRel::mutable_measures(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:arrow.substrait_ext.SegmentedAggregateRel.measures)
  return _internal_mutable_measures()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::substrait::AggregateRel_Measure>* SegmentedAggregateRel::mutable_measures()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:arrow.substrait_ext.SegmentedAggregateRel.measures)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_measures();
}
inline const ::substrait::AggregateRel_Measure& SegmentedAggregateRel::measures(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:arrow.substrait_ext.SegmentedAggregateRel.measures)
  return _internal_measures().Get(index);
}
inline ::substrait::AggregateRel_Measure* SegmentedAggregateRel::add_measures() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::substrait::AggregateRel_Measure* _add = _internal_mutable_measures()->Add();
  // @@protoc_insertion_point(field_add:arrow.substrait_ext.SegmentedAggregateRel.measures)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::AggregateRel_Measure>& SegmentedAggregateRel::measures() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:arrow.substrait_ext.SegmentedAggregateRel.measures)
  return _internal_measures();
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::AggregateRel_Measure>&
SegmentedAggregateRel::_internal_measures() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.measures_;
}
inline ::google::protobuf::RepeatedPtrField<::substrait::AggregateRel_Measure>*
SegmentedAggregateRel::_internal_mutable_measures() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.measures_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace substrait_ext
}  // namespace arrow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // substrait_2fextension_5frels_2eproto_2epb_2eh
