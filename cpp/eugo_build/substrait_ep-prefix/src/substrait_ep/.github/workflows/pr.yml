name: PR Build Check

on:
  pull_request:
jobs:
  site:
    name: Build Website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: ./.github/actions/dev-tool-python
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: python3 -m pip install -r ./site/requirements.txt
      - name: Generate Static Site
        run: mkdocs build
        working-directory: ./site
  editorconfig-checker:
    name: Check editorconfig
    runs-on: ubuntu-latest
    steps:
      - uses: editorconfig-checker/action-editorconfig-checker@v2
  proto-format-check:
    name: Check Protobuf Style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: bufbuild/buf-setup-action@v1.29.0
        with:
          github_token: ${{ github.token }}
      - run: buf format --diff --exit-code
  proto:
    name: Check Protobuf
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: bufbuild/buf-setup-action@v1.29.0
        with:
          github_token: ${{ github.token }}
      - uses: bufbuild/buf-lint-action@v1
      - name: Compile protobuf
        run: buf generate
  yamllint:
    name: Lint YAML extensions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run yamllint
        run: yamllint .
  yamlvalidate:
    name: Validate YAML extensions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - run: npm install -g ajv-cli
      - run: |
          set -euo pipefail
          for i in $(ls);
          do
            ajv validate -s ../text/simple_extensions_schema.yaml --strict=true --spec=draft2020 -d "$i"
          done
        working-directory: ./extensions
  dry_run_release:
    name: Dry-run release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: bufbuild/buf-setup-action@v1.29.0
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - run: ./ci/release/dry_run.sh
  python-style:
    name: Style-check and lint Python files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: python3 -m pip install --upgrade pip black==22.3.0 flake8==4.0.1
      - name: Black
        run: python3 -m black --diff --check .
      - name: Flake8
        run: python3 -m flake8 .
  check-proto-prefix:
    name: Check proto-prefix.py
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: bufbuild/buf-setup-action@v1.29.0
      - name: Run proto-prefix.py
        run: tools/proto_prefix.py output test proto go_package=github.com/test/proto
      - name: Modify buf config to build rewritten proto files
        run: |
          echo "version: v1" > buf.work.yaml
          echo "directories:" >> buf.work.yaml
          echo "  - output" >> buf.work.yaml
      - name: Compile rewritten proto files
        run: buf generate
