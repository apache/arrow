# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

{
    # Casting to/from boolean might read uninitialized data as the null bitmap isn't considered
    <boolean_cast>
    Memcheck:Cond
    fun:*CastFunctor*BooleanType*
}
{
    <llvm>:Conditional jump or move depends on uninitialised value(s)
    Memcheck:Cond
    ...
    fun:*llvm*PassManager*
}
{
    <re2>:Conditional jump or move depends on uninitialised value(s)
    Memcheck:Cond
    ...
    fun:*re2*RE2*
}
{
    <re2>:Use of uninitialised value of size 8
    Memcheck:Value8
    ...
    fun:*re2*RE2*
}
{
    <re2>:Conditional jump or move depends on uninitialised value(s)
    Memcheck:Cond
    ...
    fun:*re2*Prog*
}
{
    <re2>:Use of uninitialised value of size 8
    Memcheck:Value8
    ...
    fun:*re2*Prog*
}
{
    <OpenTelemetry>:Thread locals don't appear to be freed
    Memcheck:Leak
    ...
    fun:*opentelemetry*ThreadLocalContextStorage*GetStack*
}
{
    <OpenTelemetry>:Thread locals don't appear to be freed
    Memcheck:Leak
    ...
    fun:*opentelemetry*ThreadLocalContextStorage*Stack*Resize*
}
{
    <OpenTelemetry>:Thread locals don't appear to be freed
    Memcheck:Leak
    ...
    fun:_dl_allocate_tls
}
{
    <OpenSSL>:Conditional jump or move depends on uninitialised value(s)
    Memcheck:Cond
    ...
    fun:*gcm_cipher*
}
{
    <Azure>:curl shared handle deallocation fails (GH-47485)
    Memcheck:Leak
    fun:calloc
    fun:curl_share_init
    fun:*Azure*CurlConnection*
}
