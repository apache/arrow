# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

{
  global:
    extern "C++" {
      # The leading asterisk is required for symbols such as
      # "typeinfo for arrow::SomeClass".
      # Unfortunately this will also catch template specializations
      # (from e.g. STL or Flatbuffers) involving Arrow types.
      *arrow::*;
      *arrow_vendored::*;
      # OpenTelemetry requires on shared global state for features
      # like automatic span linking. If we hide its symbols, spans
      # started in (say) libarrow_dataset don't link up with those
      # started in libarrow and vice versa.
      *opentelemetry::*;
    };
    # Also export C-level helpers
    arrow_*;
    Arrow*;
    # ARROW-14771: export Protobuf symbol table
    descriptor_table_Flight*_2eproto;

  # Symbols marked as 'local' are not exported by the DSO and thus may not
  # be used by client applications.  Everything except the above falls here.
  # This ensures we hide symbols of static dependencies.
  local:
    *;

};
