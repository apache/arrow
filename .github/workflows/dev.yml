# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Dev

on:
  # always trigger
  push:
  pull_request:

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  ARCHERY_DEBUG: 1
  ARCHERY_USE_DOCKER_CLI: 1

jobs:

  lint:
    name: Lint C++, Python, R, Docker, RAT
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}
    timeout-minutes: 15
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: 3.12
      - name: Install pre-commit
        run: |
          python -m pip install pre-commit
          pre-commit run --show-diff-on-failure --color=always
      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Run pre-commit
        run: |
          pre-commit run --all-files --color=always --show-diff-on-failure
      - name: Setup Archery
        run: pip install -e dev/archery[docker]
      - name: Execute Docker Build
        env:
          ARCHERY_DOCKER_USER: ${{ secrets.DOCKERHUB_USER }}
          ARCHERY_DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          sudo sysctl -w kernel.core_pattern="core.%e.%p"
          ulimit -c unlimited
          archery docker run -e GITHUB_ACTIONS=true ubuntu-lint
      - name: Docker Push
        if: >-
          success() &&
          github.event_name == 'push' &&
          github.repository == 'apache/arrow' &&
          github.ref_name == 'main'
        env:
          ARCHERY_DOCKER_USER: ${{ secrets.DOCKERHUB_USER }}
          ARCHERY_DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true
        run: archery docker push ubuntu-lint

  release:
    name: Source Release and Merge Script on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - macos-latest
          - ubuntu-latest
    env:
      GIT_AUTHOR_NAME: "github-actions[bot]"
      GIT_AUTHOR_EMAIL: "github-actions[bot]@users.noreply.github.com"
      GIT_COMMITTER_NAME: "github-actions[bot]"
      GIT_COMMITTER_EMAIL: "github-actions[bot]@users.noreply.github.com"
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
        with:
          fetch-depth: 0
      - name: Install Python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: '3.12'
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ruby
      - name: Install .NET
        uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4.0.0
        with:
          dotnet-version: '7.0.x'
      - name: Install Dependencies
        shell: bash
        run: |
          gem install test-unit
          pip install "cython>=0.29.31" setuptools six pytest jira
      - name: Run Release Test
        env:
          ARROW_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          ci/scripts/release_test.sh $(pwd)
      - name: Run Merge Script Test
        shell: bash
        run: pytest -v dev/test_merge_arrow_pr.py
