# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Release

on:
  push:
    branches:
      - "!**"
    tags:
      # Trigger workflow when a tag whose name matches either
      # pattern "apache-arrow-{MAJOR}.{MINOR}.{PATCH}" or pattern
      # "apache-arrow-{MAJOR}.{MINOR}.{PATCH}-rc{RC_NUM}" is pushed.
      - "apache-arrow-[0-9]+.[0-9]+.[0-9]+"
      - "apache-arrow-[0-9]+.[0-9]+.[0-9]+-rc[0-9]+"

permissions:
  contents: write

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  publish:
    name: Publish 
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps: 
      - name: Checkout Arrow
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get Latest Release Candidate's Git Tag
        # Only run when a release tag is pushed
        if: !contains(${GITHUB_REF_NAME}, 'rc')
        run: |
          rc_tag=$(gh release list | \
                    cut -f3 | \
                    grep -F "${GITHUB_REF_NAME}-rc" | \
                    head -n1)
          echo "Latest Release Candidate Tag: ${rc_tag}"
          echo "ARROW_RELEASE_CANDIDATE_TAG_NAME=${rc_tag}" >> ${GITHUB_ENV}
      - name: Store Release Candidate Tag Name as Environment Variable
        # Only run when a release candidate tag is pushed
        if: contains(${GITHUB_REF_NAME}, 'rc')
        run: |
          echo "ARROW_RELEASE_CANDIDATE_TAG_NAME=${GITHUB_REF_NAME}" >> "$GITHUB_ENV"
      - name: Store Version and Release Candidate Number as Environment Variables
        run: |
          version_with_rc=${ARROW_RELEASE_CANDIDATE_TAG_NAME#apache-arrow-}
          version=${version_with_rc%-rc*}
          rc_num=${version_with_rc#${version}-rc}
          echo "ARROW_VERSION_WITH_RC=${version_with_rc}" >> "${GITHUB_ENV}"
          echo "ARROW_VERSION=${version}" >> ${GITHUB_ENV}
          echo "ARROW_RC_NUM=${rc_num}" >> ${GITHUB_ENV}
      - name: Create Release Title
        # Only run when a release tag is pushed
        if: !contains(${GITHUB_REF_NAME}, 'rc')
        run: |
          title="Apache Arrow ${ARROW_VERSION}"
          echo "ARROW_RELEASE_TITLE=${title}" >> ${GITHUB_ENV} 
      - name: Create Release Candidate Title
        # Only run when a release candidate tag is pushed
        if: contains(${GITHUB_REF_NAME}, 'rc')
        run: |
          title="Apache Arrow ${ARROW_VERSION} RC${ARROW_RC_NUM}"
      - name: Create Release Notes
        # Only run when a release tag is pushed
        if: !contains(${GITHUB_REF_NAME}, 'rc')
        run: |
          release_notes="https://arrow.apache.org/release/${ARROW_VERSION}.html"
          echo "Release Notes URL: ${release_notes}"
          echo "ARROW_RELEASE_NOTES=${release_notes}" >> ${GITHUB_ENV}
      - name: Create Release Candidate Notes
        # Only run when a release candidate tag is pushed
        if: contains(${GITHUB_REF_NAME}, 'rc')
        run: |
          release_notes="Release Candidate: ${ARROW_VERSION} RC${ARROW_RC_NUM}"
          echo "ARROW_RELEASE_NOTES=${release_notes}" >> ${GITHUB_ENV}
      - name: Create GitHub Release
        run: |
          is_prerelease=$(echo ${GITHUB_REF_NAME} | grep -E "rc[0-9]+$")
          if [ -n $is_prerelease ] then
            prerelease_flag=--prerelease
          else
            prerelease_flag=
          fi
          gh release create ${GITHUB_REF_NAME} ${prerelease_flag} \
            --title "${ARROW_RELEASE_TITLE}" \
            --notes "Release Notes: ${ARROW_RELEASE_NOTES_URL}" \
            --verify-tag
