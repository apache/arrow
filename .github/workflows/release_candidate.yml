# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Release

on:
  push:
    tags:
      # Trigger workflow when a tag whose name matches the pattern
      #"apache-arrow-{MAJOR}.{MINOR}.{PATCH}-rc{RC_NUM}" is pushed.
      - "apache-arrow-[0-9]+.[0-9]+.[0-9]+-rc[0-9]+"

permissions:
  contents: write

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  publish:
    name: Publish 
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps: 
      - name: Checkout Arrow
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Store Version and Release Candidate Number
        run: |
          version_with_rc=${GITHUB_REF_NAME#apache-arrow-}
          version=${version_with_rc%-rc*}
          rc_num=${version_with_rc#${version}-rc}
          echo "VERSION_WITH_RC=${version_with_rc}" >> ${GITHUB_ENV}
          echo "VERSION=${version}" >> ${GITHUB_ENV}
          echo "RC_NUM=${rc_num}" >> ${GITHUB_ENV}
      - name: Get Commit Associated with Release Candidate Tag
        run: |
          release_hash=$(git rev-list --max-count=1 ${GITHUB_REF_NAME})
          echo "Using commit ${release_hash}"
          echo "RELEASE_HASH=${release_hash}" >> ${GITHUB_ENV}
      - name: Download Archive From Release Hash
        run: |
          git archive ${RELEASE_HASH} --prefix ${GITHUB_REF_NAME}/ | tar xf -
      - name: Resolve all hard and symbolic links
        run: |
          mv ${GITHUB_REF_NAME} ${GITHUB_REF_NAME}.tmp
          cp -R -L ${GITHUB_REF_NAME}.tmp ${GITHUB_REF_NAME}
          rm -rf ${GITHUB_REF_NAME}.tmp
      - name: Add Source Link Support for C# Bindings
        run: |
          dummy_git=${GITHUB_REF_NAME}/csharp/dummy.git
          mkdir ${dummy_git}
          curr_dir=$(pwd)
          cd ${dummy_git} && \
          echo ${RELEASE_HASH} > HEAD && \
          echo '[remote "origin"] url = https://github.com/apache/arrow.git' >> config && \
          mkdir objects refs && \
          cd ${curr_dir}
      - name: Create Release Tarball
        run: |
          tarball=apache-arrow-${version}.tar.gz
          tar czf ${tarball} ${GITHUB_REF_NAME}
          rm -rf ${GITHUB_REF_NAME}
          echo "RELEASE_TARBALL=${tarball}" >> ${GITHUB_ENV}
      - name: Create Release Candidate Title
        run: |
          title="Apache Arrow ${VERSION} RC${RC_NUM}"
          echo "RELEASE_CANDIDATE_TITLE=${title}" >> ${GITHUB_ENV}
      - name: Create Release Candidate Notes
        run: |
          release_notes="Release Candidate: ${VERSION} RC${RC_NUM}"
          echo "RELEASE_CANDIDATE_NOTES=${release_notes}" >> ${GITHUB_ENV}
      - name: Create GitHub Release
        run: |
          gh release create ${GITHUB_REF_NAME} \
            --verify-tag \
            --prerelease \
            --title "${RELEASE_CANDIDATE_TITLE}" \
            --notes "Release Notes: ${RELEASE_CANDIDATE_NOTES}" \
            ${RELEASE_TARBALL}
