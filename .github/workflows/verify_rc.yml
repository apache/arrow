# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Verify RC

on:
  push:
    tags:
      - "*-rc*"
  pull_request:
    paths:
      - ".github/workflows/verify_rc.yml"
  workflow_dispatch:
    inputs:
      rc_tag:
        description: "Tag of the rc to verify"
        type: string
        required: true


permissions:
  contents: read

env:
  TEST_DEFAULT: "0"
  VERBOSE: "1"
  RC_TAG: "${{ inputs.rc_tag || github.event_name == 'pull_request' && 'apache-arrow-20.0.0-rc0' || github.ref_name }}"

jobs:
  apt:
    name: APT
    runs-on: ${{ matrix.runs-on }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - ubuntu-latest
          - ubuntu-24.04-arm
    env:
      TEST_APT: "1"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Run
        run: |
          package_id=${RC_TAG%-rc*}
          version=${package_id#apache-arrow-}
          rc=${RC_TAG#*-rc}
          dev/release/verify-release-candidate.sh ${version} ${rc}

  binary:
    name: Binary
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      TEST_BINARY: "1"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Run
        run: |
          package_id=${RC_TAG%-rc*}
          version=${package_id#apache-arrow-}
          rc=${RC_TAG#*-rc}
          dev/release/verify-release-candidate.sh ${version} ${rc}

  wheels-linux:
    name: Wheels Linux
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        distro:
          - almalinux-8
          - conda
          - ubuntu-22.04
          - ubuntu-24.04
    env:
      TEST_WHEELS: "1"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: 3
      - name: Setup Archery
        run: python -m pip install -e dev/archery[docker]
      - name: Prepare
        run: |
          package_id=${RC_TAG%-rc*}
          echo "VERSION=${package_id#apache-arrow-}" >> ${GITHUB_ENV}
          echo "RC=${RC_TAG#*-rc}" >> ${GITHUB_ENV}
          distro=${{ matrix.distro }}
          if [ "${distro}" = "conda" ]; then
            echo "SERVICE=${distro}-verify-rc" >> ${GITHUB_ENV}
          else
            os=${distro%-*}
            version=${distro#*-}
            echo "SERVICE=${os}-verify-rc" >> ${GITHUB_ENV}
            echo "$(echo ${os} | tr a-z A-Z)=${version}" >> ${GITHUB_ENV}
          fi
      - name: Run
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          archery docker run \
            -e TEST_DEFAULT="${TEST_DEFAULT}" \
            -e TEST_WHEELS="${TEST_WHEELS}" \
            -e VERBOSE="${VERBOSE}" \
            -e VERIFY_RC="${RC}" \
            -e VERIFY_VERSION="${VERSION}" \
            -e GH_TOKEN="$GH_TOKEN" \
            ${SERVICE}

  wheels-macos:
    name: Wheels macOS
    runs-on: ${{ matrix.runs-on }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - macos-13
          - macos-14
    env:
      TEST_WHEELS: "1"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Run
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          package_id=${RC_TAG%-rc*}
          version=${package_id#apache-arrow-}
          rc=${RC_TAG#*-rc}
          dev/release/verify-release-candidate.sh ${version} ${rc}

  wheels-windows:
    name: Wheels Windows
    runs-on: windows-latest
    timeout-minutes: 45
    env:
      PYARROW_TEST_GDB: "OFF"
      TEST_WHEELS: "1"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive
      - name: Prepare
        shell: bash
        run: |
          package_id=${RC_TAG%-rc*}
          echo "VERSION=${package_id#apache-arrow-}" >> ${GITHUB_ENV}
          echo "RC=${RC_TAG#*-rc}" >> ${GITHUB_ENV}
      - uses: conda-incubator/setup-miniconda@505e6394dae86d6a5c7fbb6e3fb8938e3e863830 # v3.1.1
      - name: Install System Dependencies
        run: |
          choco install --no-progress --yes boost-msvc-14.1
          choco install --no-progress --yes wget
      - name: Download Timezone Database
        shell: bash
        run: ci/scripts/download_tz_database.sh
      - name: Run verification
        env:
          GH_TOKEN: ${{ github.token }}
        shell: cmd
        run: |
          dev/release/verify-release-candidate-wheels.bat %VERSION% %RC%

  yum:
    name: Yum
    runs-on: ${{ matrix.runs-on }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - ubuntu-latest
          - ubuntu-24.04-arm
    env:
      TEST_YUM: "1"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Run
        run: |
          package_id=${RC_TAG%-rc*}
          version=${package_id#apache-arrow-}
          rc=${RC_TAG#*-rc}
          dev/release/verify-release-candidate.sh ${version} ${rc}
